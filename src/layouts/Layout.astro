---
import { ClientRouter } from "astro:transitions";
import Navbar from "@components/Navbar";
import Footer from "@components/Footer.astro";
import { SITE } from "@config";
import Analytics from '@vercel/analytics/astro';

import "katex/dist/katex.min.css";
import "@styles/main.css";

export interface Props {
  title?: string;
  author?: string;
  description?: string;
  hasToc?: boolean;
  activePage?: string;
  class?: string;
}

const {
  title = SITE.title,
  author = SITE.author,
  description = SITE.desc,
  hasToc = false,
  activePage
} = Astro.props;

const className = Astro.props.class || "";
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="icon" href="/favicon.png" type="image/png" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />

    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />
    <meta name="msapplication-TileColor" content="#ffffff" />

    <title>{title}</title>

    <!-- General Meta Tags -->
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />

    <!-- Twitter -->
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:url" content={canonicalURL} />

    <!-- Sitemap & Other Files -->
    <link rel="sitemap" href="/sitemap-index.xml" type="application/xml" />
    <link rel="alternate" href="/rss.xml" type="application/rss+xml" />

    <!-- Color Theme -->
    <script>
      const checkTheme = () => {
        const prefersDark =
          window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
        const setting = localStorage.getItem("solidjs-use-color-scheme") || "auto";

        document.documentElement.classList.toggle(`theme-${setting}`, true);

        if (setting === "dark" || (setting !== "light" && prefersDark))
          document.documentElement.classList.toggle("dark", true);
      };

      document.addEventListener("astro:after-swap", checkTheme);
      checkTheme();
    </script>

    <!-- Page Transitions -->
    <ClientRouter />

    <!-- Google Tag Manager -->
    <script>
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-NXL6LQ6W');
    </script>
    <!-- End Google Tag Manager -->
  </head>

  <body class="font-sans">
    <!-- Google Tag Manager (noscript) -->
    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NXL6LQ6W"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <!-- End Google Tag Manager (noscript) -->
    <main class={`${className} flex flex-col min-h-full px-4 pt-24 pb-4 md:pb-6`}>
      <Navbar client:load activePage={activePage} hasToc={hasToc} />
      <div class="flex-1 mb-6">
        <div class="prose prose-lg mx-auto">
          <slot />
        </div>
      </div>
      <Footer />
    </main>
    <script>
      // Astro's View Transitions feature deletes styles and class names injected by
      // medium-zoom when navigating to a new page, which causes the zoom effect to
      // disappear after page transition.
      // So here I have to import css and js files separately and re-attach the zoom effect.
      import mediumZoom from "medium-zoom/dist/pure";
      import "medium-zoom/dist/style.css";

      const zoom = mediumZoom();

      document.addEventListener("astro:page-load", () => {
        zoom.attach(":not(a) > img:not(.no-zoom)");
      });
    </script>
    <Analytics />
  </body>
</html>
